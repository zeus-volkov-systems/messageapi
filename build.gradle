plugins {
    id 'groovy'
    id 'maven-publish'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

shadowJar {
    baseName = 'messageapi'
    classifier = 'all'
    version = "${messageApiVersion}"
    manifest {
        attributes 'Implementation-Title': 'messageapi-all',
                   'Implementation-Version': "${messageApiVersion}"
    }
}

publishing {
  publications {
    maven(MavenPublication) {
       groupId 'gov.noaa'
       artifactId 'messageapi'
       version "${messageApiVersion}"
       from components.java
    }
    shadow(MavenPublication) { publication ->
       groupId 'gov.noaa'
       artifactId 'messageapi'
       version "${messageApiVersion}"
       project.shadow.component(publication)
    }
  }
  repositories {
    mavenLocal()
  }
}


sourceCompatibility = "${javaVersion}"
targetCompatibility = "${javaVersion}"

defaultTasks 'clean', 'rebuild','uploadShadow', 'publishToMavenLocal', 'groovydoc'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile ("com.googlecode.json-simple:json-simple:${jsonSimpleVersion}",
             "org.codehaus.groovy:groovy-all:${groovyVersion}")
    testCompile ("org.slf4j:slf4j-simple:${slf4jVersion}",
                "org.spockframework:spock-core:${spockVersion}")
    testRuntime ("com.athaydes:spock-reports:${spockReportsVersion}")
}

jar {
    manifest {
        attributes 'Implementation-Title': 'MessageAPI',
                   'Implementation-Version': "${messageApiVersion}"
    }
}

sourceSets {
    main {
        java.srcDirs = ['src/java/main']
        groovy.srcDirs = ['src/java/main']
        resources.srcDirs = ['resources/main']
    }
    test {
        java.srcDirs = ['src/java/test','src/java/main']
        groovy.srcDirs = ['src/groovy/test']
        resources.srcDirs = ['resources/test']
    }
}

test {
    systemProperty 'org.slf4j.simpleLogger.log.com.athaydes.spockframework', 'warn'
    testLogging {
        showStandardStreams = true
    }
}


task rebuild(dependsOn: [build, test]) {
    doLast {
        println "MessageAPI Version ${messageApiVersion} built successfully."
    }
}
